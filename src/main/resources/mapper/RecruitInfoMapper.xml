<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxm.yiti.mapper.RecruitInfoMapper">
    <resultMap id="BaseResultMap" type="com.jxm.yiti.domain.RecruitInfo">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="company" jdbcType="VARCHAR" property="company"/>
        <result column="recruitment_target" jdbcType="VARCHAR" property="recruitmentTarget"/>
        <result column="start_date" jdbcType="VARCHAR" property="startDate"/>
        <result column="distance_from_start_date" jdbcType="VARCHAR" property="distanceFromStartDate"/>
        <result column="end_date" jdbcType="VARCHAR" property="endDate"/>
        <result column="distance_from_end_date" jdbcType="VARCHAR" property="distanceFromEndDate"/>
        <result column="city_nature" jdbcType="VARCHAR" property="cityNature"/>
        <result column="deliver_address" jdbcType="VARCHAR" property="deliverAddress"/>
        <result column="extrapolation" jdbcType="VARCHAR" property="extrapolation"/>
        <result column="important_events" jdbcType="VARCHAR" property="importantEvents"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jxm.yiti.domain.RecruitInfo">
        <result column="city" jdbcType="LONGVARBINARY" property="city"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , company, recruitment_target, start_date, distance_from_start_date, end_date,
    distance_from_end_date, city_nature, deliver_address, extrapolation, important_events
    </sql>
    <sql id="Blob_Column_List">
        city
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.jxm.yiti.domain.RecruitInfoExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from recruit_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.jxm.yiti.domain.RecruitInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from recruit_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from recruit_info
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from recruit_info
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxm.yiti.domain.RecruitInfoExample">
        delete from recruit_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxm.yiti.domain.RecruitInfo">
        insert into recruit_info (id, company, recruitment_target,
                                  start_date, distance_from_start_date, end_date,
                                  distance_from_end_date, city_nature, deliver_address,
                                  extrapolation, important_events, city)
        values (#{id,jdbcType=INTEGER}, #{company,jdbcType=VARCHAR}, #{recruitmentTarget,jdbcType=VARCHAR},
                #{startDate,jdbcType=VARCHAR}, #{distanceFromStartDate,jdbcType=VARCHAR}, #{endDate,jdbcType=VARCHAR},
                #{distanceFromEndDate,jdbcType=VARCHAR}, #{cityNature,jdbcType=VARCHAR},
                #{deliverAddress,jdbcType=VARCHAR},
                #{extrapolation,jdbcType=VARCHAR}, #{importantEvents,jdbcType=VARCHAR}, #{city,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="com.jxm.yiti.domain.RecruitInfo">
        insert into recruit_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="company != null">
                company,
            </if>
            <if test="recruitmentTarget != null">
                recruitment_target,
            </if>
            <if test="startDate != null">
                start_date,
            </if>
            <if test="distanceFromStartDate != null">
                distance_from_start_date,
            </if>
            <if test="endDate != null">
                end_date,
            </if>
            <if test="distanceFromEndDate != null">
                distance_from_end_date,
            </if>
            <if test="cityNature != null">
                city_nature,
            </if>
            <if test="deliverAddress != null">
                deliver_address,
            </if>
            <if test="extrapolation != null">
                extrapolation,
            </if>
            <if test="importantEvents != null">
                important_events,
            </if>
            <if test="city != null">
                city,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="company != null">
                #{company,jdbcType=VARCHAR},
            </if>
            <if test="recruitmentTarget != null">
                #{recruitmentTarget,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                #{startDate,jdbcType=VARCHAR},
            </if>
            <if test="distanceFromStartDate != null">
                #{distanceFromStartDate,jdbcType=VARCHAR},
            </if>
            <if test="endDate != null">
                #{endDate,jdbcType=VARCHAR},
            </if>
            <if test="distanceFromEndDate != null">
                #{distanceFromEndDate,jdbcType=VARCHAR},
            </if>
            <if test="cityNature != null">
                #{cityNature,jdbcType=VARCHAR},
            </if>
            <if test="deliverAddress != null">
                #{deliverAddress,jdbcType=VARCHAR},
            </if>
            <if test="extrapolation != null">
                #{extrapolation,jdbcType=VARCHAR},
            </if>
            <if test="importantEvents != null">
                #{importantEvents,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxm.yiti.domain.RecruitInfoExample" resultType="java.lang.Long">
        select count(*) from recruit_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update recruit_info
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.company != null">
                company = #{record.company,jdbcType=VARCHAR},
            </if>
            <if test="record.recruitmentTarget != null">
                recruitment_target = #{record.recruitmentTarget,jdbcType=VARCHAR},
            </if>
            <if test="record.startDate != null">
                start_date = #{record.startDate,jdbcType=VARCHAR},
            </if>
            <if test="record.distanceFromStartDate != null">
                distance_from_start_date = #{record.distanceFromStartDate,jdbcType=VARCHAR},
            </if>
            <if test="record.endDate != null">
                end_date = #{record.endDate,jdbcType=VARCHAR},
            </if>
            <if test="record.distanceFromEndDate != null">
                distance_from_end_date = #{record.distanceFromEndDate,jdbcType=VARCHAR},
            </if>
            <if test="record.cityNature != null">
                city_nature = #{record.cityNature,jdbcType=VARCHAR},
            </if>
            <if test="record.deliverAddress != null">
                deliver_address = #{record.deliverAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.extrapolation != null">
                extrapolation = #{record.extrapolation,jdbcType=VARCHAR},
            </if>
            <if test="record.importantEvents != null">
                important_events = #{record.importantEvents,jdbcType=VARCHAR},
            </if>
            <if test="record.city != null">
                city = #{record.city,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update recruit_info
        set id = #{record.id,jdbcType=INTEGER},
        company = #{record.company,jdbcType=VARCHAR},
        recruitment_target = #{record.recruitmentTarget,jdbcType=VARCHAR},
        start_date = #{record.startDate,jdbcType=VARCHAR},
        distance_from_start_date = #{record.distanceFromStartDate,jdbcType=VARCHAR},
        end_date = #{record.endDate,jdbcType=VARCHAR},
        distance_from_end_date = #{record.distanceFromEndDate,jdbcType=VARCHAR},
        city_nature = #{record.cityNature,jdbcType=VARCHAR},
        deliver_address = #{record.deliverAddress,jdbcType=VARCHAR},
        extrapolation = #{record.extrapolation,jdbcType=VARCHAR},
        important_events = #{record.importantEvents,jdbcType=VARCHAR},
        city = #{record.city,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update recruit_info
        set id = #{record.id,jdbcType=INTEGER},
        company = #{record.company,jdbcType=VARCHAR},
        recruitment_target = #{record.recruitmentTarget,jdbcType=VARCHAR},
        start_date = #{record.startDate,jdbcType=VARCHAR},
        distance_from_start_date = #{record.distanceFromStartDate,jdbcType=VARCHAR},
        end_date = #{record.endDate,jdbcType=VARCHAR},
        distance_from_end_date = #{record.distanceFromEndDate,jdbcType=VARCHAR},
        city_nature = #{record.cityNature,jdbcType=VARCHAR},
        deliver_address = #{record.deliverAddress,jdbcType=VARCHAR},
        extrapolation = #{record.extrapolation,jdbcType=VARCHAR},
        important_events = #{record.importantEvents,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxm.yiti.domain.RecruitInfo">
        update recruit_info
        <set>
            <if test="company != null">
                company = #{company,jdbcType=VARCHAR},
            </if>
            <if test="recruitmentTarget != null">
                recruitment_target = #{recruitmentTarget,jdbcType=VARCHAR},
            </if>
            <if test="startDate != null">
                start_date = #{startDate,jdbcType=VARCHAR},
            </if>
            <if test="distanceFromStartDate != null">
                distance_from_start_date = #{distanceFromStartDate,jdbcType=VARCHAR},
            </if>
            <if test="endDate != null">
                end_date = #{endDate,jdbcType=VARCHAR},
            </if>
            <if test="distanceFromEndDate != null">
                distance_from_end_date = #{distanceFromEndDate,jdbcType=VARCHAR},
            </if>
            <if test="cityNature != null">
                city_nature = #{cityNature,jdbcType=VARCHAR},
            </if>
            <if test="deliverAddress != null">
                deliver_address = #{deliverAddress,jdbcType=VARCHAR},
            </if>
            <if test="extrapolation != null">
                extrapolation = #{extrapolation,jdbcType=VARCHAR},
            </if>
            <if test="importantEvents != null">
                important_events = #{importantEvents,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jxm.yiti.domain.RecruitInfo">
        update recruit_info
        set company                  = #{company,jdbcType=VARCHAR},
            recruitment_target       = #{recruitmentTarget,jdbcType=VARCHAR},
            start_date               = #{startDate,jdbcType=VARCHAR},
            distance_from_start_date = #{distanceFromStartDate,jdbcType=VARCHAR},
            end_date                 = #{endDate,jdbcType=VARCHAR},
            distance_from_end_date   = #{distanceFromEndDate,jdbcType=VARCHAR},
            city_nature              = #{cityNature,jdbcType=VARCHAR},
            deliver_address          = #{deliverAddress,jdbcType=VARCHAR},
            extrapolation            = #{extrapolation,jdbcType=VARCHAR},
            important_events         = #{importantEvents,jdbcType=VARCHAR},
            city                     = #{city,jdbcType=LONGVARBINARY}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.jxm.yiti.domain.RecruitInfo">
        update recruit_info
        set company                  = #{company,jdbcType=VARCHAR},
            recruitment_target       = #{recruitmentTarget,jdbcType=VARCHAR},
            start_date               = #{startDate,jdbcType=VARCHAR},
            distance_from_start_date = #{distanceFromStartDate,jdbcType=VARCHAR},
            end_date                 = #{endDate,jdbcType=VARCHAR},
            distance_from_end_date   = #{distanceFromEndDate,jdbcType=VARCHAR},
            city_nature              = #{cityNature,jdbcType=VARCHAR},
            deliver_address          = #{deliverAddress,jdbcType=VARCHAR},
            extrapolation            = #{extrapolation,jdbcType=VARCHAR},
            important_events         = #{importantEvents,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>