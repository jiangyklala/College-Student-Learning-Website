<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jxm.yiti.mapper.PracticeUserMapper">
    <resultMap id="BaseResultMap" type="com.jxm.yiti.domain.PracticeUser">
        <id column="user_id" jdbcType="BIGINT" property="userId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.jxm.yiti.domain.PracticeUser">
        <result column="settings_obj" jdbcType="LONGVARBINARY" property="settingsObj"/>
        <result column="done_id_list" jdbcType="LONGVARBINARY" property="doneIdList"/>
        <result column="wrong_id_list" jdbcType="LONGVARBINARY" property="wrongIdList"/>
        <result column="mark_id_list" jdbcType="LONGVARBINARY" property="markIdList"/>
        <result column="other" jdbcType="LONGVARBINARY" property="other"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        user_id
    </sql>
    <sql id="Blob_Column_List">
        settings_obj
        , done_id_list, wrong_id_list, mark_id_list, other
    </sql>
    <select id="selectByExampleWithBLOBs" parameterType="com.jxm.yiti.domain.PracticeUserExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from practice_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample" parameterType="com.jxm.yiti.domain.PracticeUserExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from practice_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from practice_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from practice_user
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <delete id="deleteByExample" parameterType="com.jxm.yiti.domain.PracticeUserExample">
        delete from practice_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.jxm.yiti.domain.PracticeUser">
        insert into practice_user (user_id, settings_obj, done_id_list,
                                   wrong_id_list, mark_id_list, other)
        values (#{userId,jdbcType=BIGINT}, #{settingsObj,jdbcType=LONGVARBINARY}, #{doneIdList,jdbcType=LONGVARBINARY},
                #{wrongIdList,jdbcType=LONGVARBINARY}, #{markIdList,jdbcType=LONGVARBINARY},
                #{other,jdbcType=LONGVARBINARY})
    </insert>
    <insert id="insertSelective" parameterType="com.jxm.yiti.domain.PracticeUser">
        insert into practice_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="settingsObj != null">
                settings_obj,
            </if>
            <if test="doneIdList != null">
                done_id_list,
            </if>
            <if test="wrongIdList != null">
                wrong_id_list,
            </if>
            <if test="markIdList != null">
                mark_id_list,
            </if>
            <if test="other != null">
                other,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="settingsObj != null">
                #{settingsObj,jdbcType=LONGVARBINARY},
            </if>
            <if test="doneIdList != null">
                #{doneIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="wrongIdList != null">
                #{wrongIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="markIdList != null">
                #{markIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="other != null">
                #{other,jdbcType=LONGVARBINARY},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.jxm.yiti.domain.PracticeUserExample" resultType="java.lang.Long">
        select count(*) from practice_user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update practice_user
        <set>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.settingsObj != null">
                settings_obj = #{record.settingsObj,jdbcType=LONGVARBINARY},
            </if>
            <if test="record.doneIdList != null">
                done_id_list = #{record.doneIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="record.wrongIdList != null">
                wrong_id_list = #{record.wrongIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="record.markIdList != null">
                mark_id_list = #{record.markIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="record.other != null">
                other = #{record.other,jdbcType=LONGVARBINARY},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update practice_user
        set user_id = #{record.userId,jdbcType=BIGINT},
        settings_obj = #{record.settingsObj,jdbcType=LONGVARBINARY},
        done_id_list = #{record.doneIdList,jdbcType=LONGVARBINARY},
        wrong_id_list = #{record.wrongIdList,jdbcType=LONGVARBINARY},
        mark_id_list = #{record.markIdList,jdbcType=LONGVARBINARY},
        other = #{record.other,jdbcType=LONGVARBINARY}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update practice_user
        set user_id = #{record.userId,jdbcType=BIGINT}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.jxm.yiti.domain.PracticeUser">
        update practice_user
        <set>
            <if test="settingsObj != null">
                settings_obj = #{settingsObj,jdbcType=LONGVARBINARY},
            </if>
            <if test="doneIdList != null">
                done_id_list = #{doneIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="wrongIdList != null">
                wrong_id_list = #{wrongIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="markIdList != null">
                mark_id_list = #{markIdList,jdbcType=LONGVARBINARY},
            </if>
            <if test="other != null">
                other = #{other,jdbcType=LONGVARBINARY},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.jxm.yiti.domain.PracticeUser">
        update practice_user
        set settings_obj  = #{settingsObj,jdbcType=LONGVARBINARY},
            done_id_list  = #{doneIdList,jdbcType=LONGVARBINARY},
            wrong_id_list = #{wrongIdList,jdbcType=LONGVARBINARY},
            mark_id_list  = #{markIdList,jdbcType=LONGVARBINARY},
            other         = #{other,jdbcType=LONGVARBINARY}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
</mapper>